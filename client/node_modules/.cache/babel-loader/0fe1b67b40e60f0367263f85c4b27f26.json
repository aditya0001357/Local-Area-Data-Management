{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\singh\\\\Downloads\\\\Local-Area-Website-DBMS--main\\\\Local-Area-Website-DBMS--main\\\\client\\\\src\\\\components\\\\modal\\\\BankInfoAdd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from '@material-ui/core/Button';\nimport Axios from 'axios'; // import { SnackbarProvider} from 'notistack';\n// import Snack from '../Snack'\n\nimport { useSnackbar } from 'notistack';\n\nfunction BankInfoAdd(props) {\n  _s();\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleClose = () => props.close();\n\n  const [banks, setBanks] = useState([]);\n  const [selectedBank, setSelectedBank] = useState(''); // const [notify,setNotify]=useState({\n  //     open:false,\n  //     variant:''\n  // })\n\n  useEffect(() => {\n    Axios.get('http://localhost:4000/banks').then(res => {\n      setBanks(res.data);\n    }).catch(err => {\n      enqueueSnackbar(\"Error thrown\", {\n        variant: 'error'\n      });\n    });\n  }, []);\n\n  const handleSubmit = () => {\n    if (selectedBank === '') {\n      // alert('please select a Bank');\n      enqueueSnackbar(\"Please Select a bank\", {\n        variant: 'error'\n      });\n    } else {\n      props.close();\n      Axios.post('http://localhost:4000/bankadd', {\n        Pid: props.Pid,\n        bank_id: selectedBank\n      }).then(res => {\n        if (res.data === 'ERROR') {\n          // alert('Opening of bank account unsuccesfull');\n          enqueueSnackbar(\"You May Already have a account in this bank\", {\n            variant: 'error'\n          });\n        } else {\n          // alert('Your Bank Account opened succesfully');\n          enqueueSnackbar(\"Opened Succesflly\", {\n            variant: 'success'\n          });\n          props.update(res.data);\n        }\n      }).catch(err => {\n        enqueueSnackbar(\"Error occured\", {\n          variant: 'error'\n        });\n      });\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // <>\n    // <SnackbarProvider maxSnack={3}>\n    //     {/* {notify.open && <Snack variant={notify.variant}/>} */}\n    // </SnackbarProvider>\n    _jsxDEV(Modal, {\n      show: props.show,\n      onHide: handleClose,\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      style: {\n        marginTop: \"40px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add your Bank Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Select the bank to open an account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"Bank_Id\",\n              as: \"select\",\n              onChange: e => setSelectedBank(e.target.value),\n              children: [banks.map(bank => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: bank.BANK_ID,\n                  children: bank.BANK_ID + \"  \" + bank.NAME\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"option\", {\n                selected: true,\n                value: '',\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: handleClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) // </>\n\n  );\n}\n\n_s(BankInfoAdd, \"ganxLOk5txOd3v6+4a6EF4xo0qo=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = BankInfoAdd;\nexport default BankInfoAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"BankInfoAdd\");","map":{"version":3,"sources":["C:/Users/singh/Downloads/Local-Area-Website-DBMS--main/Local-Area-Website-DBMS--main/client/src/components/modal/BankInfoAdd.js"],"names":["React","useState","useEffect","Form","Modal","Button","Axios","useSnackbar","BankInfoAdd","props","enqueueSnackbar","handleClose","close","banks","setBanks","selectedBank","setSelectedBank","get","then","res","data","catch","err","variant","handleSubmit","post","Pid","bank_id","update","show","marginTop","e","target","value","map","bank","BANK_ID","NAME"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from '@material-ui/core/Button'\r\nimport Axios from 'axios';\r\n// import { SnackbarProvider} from 'notistack';\r\n// import Snack from '../Snack'\r\n\r\nimport { useSnackbar } from 'notistack';\r\n\r\n\r\n\r\n\r\nfunction BankInfoAdd(props) {\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleClose = () => props.close();\r\n\r\n    const [banks, setBanks] = useState([]);\r\n    const [selectedBank, setSelectedBank] = useState('');\r\n    // const [notify,setNotify]=useState({\r\n    //     open:false,\r\n    //     variant:''\r\n    // })\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:4000/banks')\r\n            .then(res => {\r\n                setBanks(res.data);\r\n\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Error thrown\", { variant: 'error' });\r\n            })\r\n    }, [])\r\n\r\n    const handleSubmit = () => {\r\n\r\n        if (selectedBank === '') {\r\n            // alert('please select a Bank');\r\n            enqueueSnackbar(\"Please Select a bank\", { variant: 'error' });\r\n        }\r\n        else {\r\n            props.close();\r\n            Axios.post('http://localhost:4000/bankadd', {\r\n                Pid: props.Pid,\r\n                bank_id: selectedBank,\r\n            })\r\n                .then(res => {\r\n                    if (res.data === 'ERROR') {\r\n                        // alert('Opening of bank account unsuccesfull');\r\n                        enqueueSnackbar(\"You May Already have a account in this bank\", { variant: 'error' });\r\n\r\n                    }\r\n                    else {\r\n                        // alert('Your Bank Account opened succesfully');\r\n                        enqueueSnackbar(\"Opened Succesflly\", { variant: 'success' });\r\n\r\n                        props.update(res.data)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    enqueueSnackbar(\"Error occured\", { variant: 'error' });\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        // <>\r\n        // <SnackbarProvider maxSnack={3}>\r\n        //     {/* {notify.open && <Snack variant={notify.variant}/>} */}\r\n        // </SnackbarProvider>\r\n        <Modal show={props.show} onHide={handleClose} aria-labelledby=\"contained-modal-title-vcenter\" style={{ marginTop: \"40px\" }}>\r\n            <Modal.Header>\r\n                <Modal.Title>Add your Bank Details</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Select the bank to open an account</Form.Label>\r\n                        <Form.Control name=\"Bank_Id\" as='select' onChange={(e) => setSelectedBank(e.target.value)}>\r\n                            {banks.map(bank => {\r\n                                return (\r\n                                    <option value={bank.BANK_ID}>{bank.BANK_ID + \"  \" + bank.NAME}</option>\r\n                                )\r\n                            })}\r\n                            <option selected value={''}>Select</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Button color=\"secondary\" onClick={handleClose}>Cancel</Button>\r\n            <Button color=\"primary\" onClick={handleSubmit}>Submit</Button>\r\n            <Modal.Footer>\r\n\r\n            </Modal.Footer>\r\n        </Modal>\r\n        // </>\r\n    )\r\n}\r\n\r\nexport default BankInfoAdd;"]},"metadata":{},"sourceType":"module"}