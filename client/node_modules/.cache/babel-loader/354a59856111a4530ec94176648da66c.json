{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\singh\\\\Downloads\\\\Local-Area-Website-DBMS--main\\\\Local-Area-Website-DBMS--main\\\\client\\\\src\\\\components\\\\modal\\\\HospitalAddForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from '@material-ui/core/Button';\nimport Axios from 'axios';\nimport { useSnackbar } from 'notistack';\n\nfunction HospitalAddForm(props) {\n  _s();\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [hospitals, setHospitls] = useState([]);\n  const [selectedHospital, setSelectedHospital] = useState('');\n  const [date, setDate] = useState('');\n  const [problem, setProblem] = useState('');\n  useEffect(() => {\n    Axios.get('http://localhost:4000/hospitals').then(res => {\n      if (res.data === 'ERROR') {\n        // alert('Problem fetching details of hospitals')\n        enqueueSnackbar(\"Problem fetching details of hospitals\", {\n          variant: 'error'\n        });\n      } else {\n        setHospitls(res.data);\n      }\n    }).catch(err => {\n      enqueueSnackbar(\"Error occured\", {\n        variant: 'error'\n      });\n    });\n  }, []);\n\n  const handleClose = () => props.close();\n\n  const handleSubmit = () => {\n    if (selectedHospital === '' || date === '' || problem === '') {\n      // alert('please fill the form correctly');\n      enqueueSnackbar(\"Please Fill Details completely\", {\n        variant: 'warning'\n      });\n    } else {\n      props.close();\n      Axios.post('http://localhost:4000/hospitaladd', {\n        Pid: props.Pid,\n        hospital_id: selectedHospital,\n        date: date,\n        for_problem: problem\n      }).then(res => {\n        if (res.data === 'ERROR') {\n          // alert('problem in adding hospital info')\n          enqueueSnackbar(\"You May already have gone to this hospital today\", {\n            variant: 'error'\n          });\n        } else {\n          // console.log(res);\n          // alert('succesfully added hospital info')\n          enqueueSnackbar(\"Added Succesflly\", {\n            variant: 'success'\n          });\n          props.update(res.data);\n        }\n      }).catch(err => {\n        enqueueSnackbar(\"Error occured\", {\n          variant: 'error'\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.show,\n    onHide: props.close,\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    style: {\n      marginTop: \"40px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Add Your consulted Hospital Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Select Hospital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            name: \"hospital_id\",\n            onChange: e => setSelectedHospital(e.target.value),\n            children: [hospitals.map(hospital => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: hospital.HOSPITAL_ID,\n                children: hospital.HOSPITAL_ID + \"  \" + hospital.NAME\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              value: '',\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"date\",\n            type: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Problem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"for_problem\",\n            type: \"text\",\n            value: problem,\n            onChange: e => setProblem(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: handleClose,\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HospitalAddForm, \"JuT710fGTksoX7rU8+AabfX7+IA=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = HospitalAddForm;\nexport default HospitalAddForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"HospitalAddForm\");","map":{"version":3,"sources":["C:/Users/singh/Downloads/Local-Area-Website-DBMS--main/Local-Area-Website-DBMS--main/client/src/components/modal/HospitalAddForm.js"],"names":["React","useState","useEffect","Form","Modal","Button","Axios","useSnackbar","HospitalAddForm","props","enqueueSnackbar","hospitals","setHospitls","selectedHospital","setSelectedHospital","date","setDate","problem","setProblem","get","then","res","data","variant","catch","err","handleClose","close","handleSubmit","post","Pid","hospital_id","for_problem","update","show","marginTop","e","target","value","map","hospital","HOSPITAL_ID","NAME"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from '@material-ui/core/Button'\r\nimport Axios from 'axios';\r\nimport { useSnackbar } from 'notistack';\r\n\r\n\r\nfunction HospitalAddForm(props) {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const [hospitals, setHospitls] = useState([]);\r\n    const [selectedHospital, setSelectedHospital] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [problem, setProblem] = useState('');\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:4000/hospitals')\r\n            .then(res => {\r\n                if (res.data === 'ERROR') {\r\n                    // alert('Problem fetching details of hospitals')\r\n                    enqueueSnackbar(\"Problem fetching details of hospitals\", { variant: 'error' });\r\n                }\r\n                else {\r\n                    setHospitls(res.data)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Error occured\", { variant: 'error' });\r\n            })\r\n    }, [])\r\n\r\n\r\n    const handleClose = () => props.close();\r\n    const handleSubmit = () => {\r\n\r\n        if (selectedHospital === '' || date === '' || problem === '') {\r\n            // alert('please fill the form correctly');\r\n            enqueueSnackbar(\"Please Fill Details completely\", { variant: 'warning' });\r\n        }\r\n        else {\r\n            props.close();\r\n            Axios.post('http://localhost:4000/hospitaladd', {\r\n                Pid: props.Pid,\r\n                hospital_id: selectedHospital,\r\n                date: date,\r\n                for_problem: problem\r\n            })\r\n                .then(res => {\r\n                    if (res.data === 'ERROR') {\r\n                        // alert('problem in adding hospital info')\r\n                        enqueueSnackbar(\"You May already have gone to this hospital today\", { variant: 'error' });\r\n                    }\r\n                    else {\r\n                        // console.log(res);\r\n                        // alert('succesfully added hospital info')\r\n                        enqueueSnackbar(\"Added Succesflly\", { variant: 'success' });\r\n                        props.update(res.data);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    enqueueSnackbar(\"Error occured\", { variant: 'error' });\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal show={props.show} onHide={props.close} aria-labelledby=\"contained-modal-title-vcenter\" style={{ marginTop: \"40px\" }}>\r\n            <Modal.Header>\r\n                <Modal.Title>Add Your consulted Hospital Information</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Select Hospital</Form.Label>\r\n                        <Form.Control as=\"select\" name=\"hospital_id\" onChange={(e) => setSelectedHospital(e.target.value)}>\r\n                            {hospitals.map(hospital => {\r\n                                return (\r\n                                    <option value={hospital.HOSPITAL_ID}>{hospital.HOSPITAL_ID + \"  \" + hospital.NAME}</option>\r\n                                )\r\n                            })}\r\n                            <option selected value={''}>Select</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Date</Form.Label>\r\n                        <Form.Control name=\"date\" type=\"date\" value={date} onChange={(e) => setDate(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Problem</Form.Label>\r\n                        <Form.Control name=\"for_problem\" type=\"text\" value={problem} onChange={(e) => setProblem(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                </Form>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button color=\"secondary\" onClick={handleClose}>cancel</Button>\r\n                <Button color=\"primary\" onClick={handleSubmit}>Submit</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default HospitalAddForm;"]},"metadata":{},"sourceType":"module"}