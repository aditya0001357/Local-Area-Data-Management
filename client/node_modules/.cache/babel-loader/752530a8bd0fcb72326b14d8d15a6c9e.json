{"ast":null,"code":"import _slicedToArray from\"C:/Users/singh/Downloads/Local-Area-Website-DBMS--main/Local-Area-Website-DBMS--main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState}from'react';// import 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from'react-bootstrap/Form';import Modal from'react-bootstrap/Modal';import Button from'@material-ui/core/Button';import Axios from'axios';import{useSnackbar}from'notistack';function HospitalAdd(props){var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),address=_useState4[0],setAddress=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),phone=_useState6[0],setPhone=_useState6[1];var handleSubmit=function handleSubmit(){if(name===''||address===''||phone===''){// alert('please provide complete details')\nenqueueSnackbar('Provide Complete Details',{variant:'warning'});}else{props.close();Axios.post('http://localhost:4000/createhospital',{name:name,address:address,phone:phone}).then(function(res){if(res.data==='ERROR'){// alert('error thrown')\nenqueueSnackbar('Error Thrown',{variant:'error'});}else{// alert('hospital Created')\nenqueueSnackbar('Hospital Created',{variant:'success'});}}).catch(function(err){console.log(err);// alert('error occured')\nenqueueSnackbar('Error occured',{variant:'error'});});}};return/*#__PURE__*/_jsxs(Modal,{show:true,onHide:props.close,children:[/*#__PURE__*/_jsx(Modal.Header,{children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Build a Hospital\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Enter Name\"}),/*#__PURE__*/_jsx(Form.Control,{name:\"name\",type:\"text\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Enter Address\"}),/*#__PURE__*/_jsx(Form.Control,{name:\"adress\",type:\"text\",value:address,onChange:function onChange(e){return setAddress(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Enter Phone\"}),/*#__PURE__*/_jsx(Form.Control,{name:\"phone\",type:\"text\",value:phone,onChange:function onChange(e){return setPhone(e.target.value);}})]})]})}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{color:\"secondary\",onClick:function onClick(){return props.close();},children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:handleSubmit,children:\"Add Hospital\"})]})]});}export default HospitalAdd;","map":{"version":3,"sources":["C:/Users/singh/Downloads/Local-Area-Website-DBMS--main/Local-Area-Website-DBMS--main/client/src/components/modal/admin/HospitalAdd.js"],"names":["React","useState","Form","Modal","Button","Axios","useSnackbar","HospitalAdd","props","enqueueSnackbar","name","setName","address","setAddress","phone","setPhone","handleSubmit","variant","close","post","then","res","data","catch","err","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from '@material-ui/core/Button'\r\nimport Axios from 'axios';\r\nimport { useSnackbar } from 'notistack';\r\n\r\n\r\n\r\n\r\nfunction HospitalAdd(props) {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const [name, setName] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n\r\n    const handleSubmit = () => {\r\n        \r\n        if (name === '' || address === '' || phone === '') {\r\n            // alert('please provide complete details')\r\n            enqueueSnackbar('Provide Complete Details', { variant: 'warning' });\r\n        }\r\n        else {\r\n            \r\n            props.close();\r\n\r\n\r\n            Axios.post('http://localhost:4000/createhospital', {\r\n                name: name,\r\n                address: address,\r\n                phone: phone\r\n            })\r\n                .then(res => {\r\n                    if (res.data === 'ERROR') {\r\n                        // alert('error thrown')\r\n                        enqueueSnackbar('Error Thrown', { variant: 'error' });\r\n                    }\r\n                    else {\r\n                        // alert('hospital Created')\r\n                        enqueueSnackbar('Hospital Created', { variant: 'success' });\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    // alert('error occured')\r\n                    enqueueSnackbar('Error occured', { variant: 'error' });\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Modal show={true} onHide={props.close}>\r\n            <Modal.Header>\r\n                <Modal.Title>Build a Hospital</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Enter Name</Form.Label>\r\n                        <Form.Control name='name' type='text' value={name} onChange={(e) => setName(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Enter Address</Form.Label>\r\n                        <Form.Control name='adress' type='text' value={address} onChange={(e) => setAddress(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Enter Phone</Form.Label>\r\n                        <Form.Control name='phone' type='text' value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                </Form>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button color=\"secondary\" onClick={() => props.close()}>Cancel</Button>\r\n\r\n                <Button color=\"primary\" onClick={handleSubmit}>Add Hospital</Button>\r\n\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default HospitalAdd;\r\n"]},"metadata":{},"sourceType":"module"}