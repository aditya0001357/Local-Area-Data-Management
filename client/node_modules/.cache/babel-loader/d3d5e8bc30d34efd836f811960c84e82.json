{"ast":null,"code":"import _slicedToArray from\"C:/Users/singh/Downloads/Local-Area-Website-DBMS--main/Local-Area-Website-DBMS--main/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import'bootstrap/dist/css/bootstrap.min.css';import Form from'react-bootstrap/Form';import Modal from'react-bootstrap/Modal';import Button from'@material-ui/core/Button';import Axios from'axios';import{useSnackbar}from'notistack';function HospitalAddForm(props){var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),hospitals=_useState2[0],setHospitls=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),selectedHospital=_useState4[0],setSelectedHospital=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),date=_useState6[0],setDate=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),problem=_useState8[0],setProblem=_useState8[1];useEffect(function(){Axios.get('http://localhost:4000/hospitals').then(function(res){if(res.data==='ERROR'){// alert('Problem fetching details of hospitals')\nenqueueSnackbar(\"Problem fetching details of hospitals\",{variant:'error'});}else{setHospitls(res.data);}}).catch(function(err){enqueueSnackbar(\"Error occured\",{variant:'error'});});},[]);var handleClose=function handleClose(){return props.close();};var handleSubmit=function handleSubmit(){if(selectedHospital===''||date===''||problem===''){// alert('please fill the form correctly');\nenqueueSnackbar(\"Please Fill Details completely\",{variant:'warning'});}else{props.close();Axios.post('http://localhost:4000/hospitaladd',{Pid:props.Pid,hospital_id:selectedHospital,date:date,for_problem:problem}).then(function(res){if(res.data==='ERROR'){// alert('problem in adding hospital info')\nenqueueSnackbar(\"You May already have gone to this hospital today\",{variant:'error'});}else{// console.log(res);\n// alert('succesfully added hospital info')\nenqueueSnackbar(\"Added Succesflly\",{variant:'success'});props.update(res.data);}}).catch(function(err){enqueueSnackbar(\"Error occured\",{variant:'error'});});}};return/*#__PURE__*/_jsxs(Modal,{show:props.show,onHide:props.close,\"aria-labelledby\":\"contained-modal-title-vcenter\",style:{marginTop:\"40px\"},children:[/*#__PURE__*/_jsx(Modal.Header,{children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Add Your consulted Hospital Information\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Select Hospital\"}),/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",name:\"hospital_id\",onChange:function onChange(e){return setSelectedHospital(e.target.value);},children:[hospitals.map(function(hospital){return/*#__PURE__*/_jsx(\"option\",{value:hospital.HOSPITAL_ID,children:hospital.HOSPITAL_ID+\"  \"+hospital.NAME});}),/*#__PURE__*/_jsx(\"option\",{selected:true,value:'',children:\"Select\"})]})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Date\"}),/*#__PURE__*/_jsx(Form.Control,{name:\"date\",type:\"date\",value:date,onChange:function onChange(e){return setDate(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Problem\"}),/*#__PURE__*/_jsx(Form.Control,{name:\"for_problem\",type:\"text\",value:problem,onChange:function onChange(e){return setProblem(e.target.value);}})]})]})}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{color:\"secondary\",onClick:handleClose,children:\"cancel\"}),/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:handleSubmit,children:\"Submit\"})]})]});}export default HospitalAddForm;","map":{"version":3,"sources":["C:/Users/singh/Downloads/Local-Area-Website-DBMS--main/Local-Area-Website-DBMS--main/client/src/components/modal/HospitalAddForm.js"],"names":["React","useState","useEffect","Form","Modal","Button","Axios","useSnackbar","HospitalAddForm","props","enqueueSnackbar","hospitals","setHospitls","selectedHospital","setSelectedHospital","date","setDate","problem","setProblem","get","then","res","data","variant","catch","err","handleClose","close","handleSubmit","post","Pid","hospital_id","for_problem","update","show","marginTop","e","target","value","map","hospital","HOSPITAL_ID","NAME"],"mappings":"0SAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,sCAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,WAA5B,CAGA,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,kBACAF,WAAW,EADX,CACpBG,eADoB,cACpBA,eADoB,eAGKT,QAAQ,CAAC,EAAD,CAHb,wCAGrBU,SAHqB,eAGVC,WAHU,8BAIoBX,QAAQ,CAAC,EAAD,CAJ5B,yCAIrBY,gBAJqB,eAIHC,mBAJG,8BAKJb,QAAQ,CAAC,EAAD,CALJ,yCAKrBc,IALqB,eAKfC,OALe,8BAMEf,QAAQ,CAAC,EAAD,CANV,yCAMrBgB,OANqB,eAMZC,UANY,eAQ5BhB,SAAS,CAAC,UAAM,CACZI,KAAK,CAACa,GAAN,CAAU,iCAAV,EACKC,IADL,CACU,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,IAAJ,GAAa,OAAjB,CAA0B,CACtB;AACAZ,eAAe,CAAC,uCAAD,CAA0C,CAAEa,OAAO,CAAE,OAAX,CAA1C,CAAf,CACH,CAHD,IAIK,CACDX,WAAW,CAACS,GAAG,CAACC,IAAL,CAAX,CACH,CACJ,CATL,EAUKE,KAVL,CAUW,SAAAC,GAAG,CAAI,CACVf,eAAe,CAAC,eAAD,CAAkB,CAAEa,OAAO,CAAE,OAAX,CAAlB,CAAf,CACH,CAZL,EAaH,CAdQ,CAcN,EAdM,CAAT,CAiBA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMjB,CAAAA,KAAK,CAACkB,KAAN,EAAN,EAApB,CACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAEvB,GAAIf,gBAAgB,GAAK,EAArB,EAA2BE,IAAI,GAAK,EAApC,EAA0CE,OAAO,GAAK,EAA1D,CAA8D,CAC1D;AACAP,eAAe,CAAC,gCAAD,CAAmC,CAAEa,OAAO,CAAE,SAAX,CAAnC,CAAf,CACH,CAHD,IAIK,CACDd,KAAK,CAACkB,KAAN,GACArB,KAAK,CAACuB,IAAN,CAAW,mCAAX,CAAgD,CAC5CC,GAAG,CAAErB,KAAK,CAACqB,GADiC,CAE5CC,WAAW,CAAElB,gBAF+B,CAG5CE,IAAI,CAAEA,IAHsC,CAI5CiB,WAAW,CAAEf,OAJ+B,CAAhD,EAMKG,IANL,CAMU,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,IAAJ,GAAa,OAAjB,CAA0B,CACtB;AACAZ,eAAe,CAAC,kDAAD,CAAqD,CAAEa,OAAO,CAAE,OAAX,CAArD,CAAf,CACH,CAHD,IAIK,CACD;AACA;AACAb,eAAe,CAAC,kBAAD,CAAqB,CAAEa,OAAO,CAAE,SAAX,CAArB,CAAf,CACAd,KAAK,CAACwB,MAAN,CAAaZ,GAAG,CAACC,IAAjB,EACH,CACJ,CAjBL,EAkBKE,KAlBL,CAkBW,SAAAC,GAAG,CAAI,CACVf,eAAe,CAAC,eAAD,CAAkB,CAAEa,OAAO,CAAE,OAAX,CAAlB,CAAf,CACH,CApBL,EAqBH,CACJ,CA9BD,CAgCA,mBACI,MAAC,KAAD,EAAO,IAAI,CAAEd,KAAK,CAACyB,IAAnB,CAAyB,MAAM,CAAEzB,KAAK,CAACkB,KAAvC,CAA8C,kBAAgB,+BAA9D,CAA8F,KAAK,CAAE,CAAEQ,SAAS,CAAE,MAAb,CAArG,wBACI,KAAC,KAAD,CAAO,MAAP,wBACI,KAAC,KAAD,CAAO,KAAP,sDADJ,EADJ,cAKI,KAAC,KAAD,CAAO,IAAP,wBACI,MAAC,IAAD,yBACI,MAAC,IAAD,CAAM,KAAN,yBACI,KAAC,IAAD,CAAM,KAAN,8BADJ,cAEI,MAAC,IAAD,CAAM,OAAN,EAAc,EAAE,CAAC,QAAjB,CAA0B,IAAI,CAAC,aAA/B,CAA6C,QAAQ,CAAE,kBAACC,CAAD,QAAOtB,CAAAA,mBAAmB,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1B,EAAvD,WACK3B,SAAS,CAAC4B,GAAV,CAAc,SAAAC,QAAQ,CAAI,CACvB,mBACI,eAAQ,KAAK,CAAEA,QAAQ,CAACC,WAAxB,UAAsCD,QAAQ,CAACC,WAAT,CAAuB,IAAvB,CAA8BD,QAAQ,CAACE,IAA7E,EADJ,CAGH,CAJA,CADL,cAMI,eAAQ,QAAQ,KAAhB,CAAiB,KAAK,CAAE,EAAxB,oBANJ,GAFJ,GADJ,cAaI,MAAC,IAAD,CAAM,KAAN,yBACI,KAAC,IAAD,CAAM,KAAN,mBADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,IAAI,CAAC,MAA/B,CAAsC,KAAK,CAAE3B,IAA7C,CAAmD,QAAQ,CAAE,kBAACqB,CAAD,QAAOpB,CAAAA,OAAO,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,EAA7D,EAFJ,GAbJ,cAkBI,MAAC,IAAD,CAAM,KAAN,yBACI,KAAC,IAAD,CAAM,KAAN,sBADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,aAAnB,CAAiC,IAAI,CAAC,MAAtC,CAA6C,KAAK,CAAErB,OAApD,CAA6D,QAAQ,CAAE,kBAACmB,CAAD,QAAOlB,CAAAA,UAAU,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB,EAAvE,EAFJ,GAlBJ,GADJ,EALJ,cAgCI,MAAC,KAAD,CAAO,MAAP,yBACI,KAAC,MAAD,EAAQ,KAAK,CAAC,WAAd,CAA0B,OAAO,CAAEZ,WAAnC,oBADJ,cAEI,KAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,OAAO,CAAEE,YAAjC,oBAFJ,GAhCJ,GADJ,CAuCH,CAED,cAAepB,CAAAA,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from '@material-ui/core/Button'\r\nimport Axios from 'axios';\r\nimport { useSnackbar } from 'notistack';\r\n\r\n\r\nfunction HospitalAddForm(props) {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const [hospitals, setHospitls] = useState([]);\r\n    const [selectedHospital, setSelectedHospital] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [problem, setProblem] = useState('');\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:4000/hospitals')\r\n            .then(res => {\r\n                if (res.data === 'ERROR') {\r\n                    // alert('Problem fetching details of hospitals')\r\n                    enqueueSnackbar(\"Problem fetching details of hospitals\", { variant: 'error' });\r\n                }\r\n                else {\r\n                    setHospitls(res.data)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Error occured\", { variant: 'error' });\r\n            })\r\n    }, [])\r\n\r\n\r\n    const handleClose = () => props.close();\r\n    const handleSubmit = () => {\r\n\r\n        if (selectedHospital === '' || date === '' || problem === '') {\r\n            // alert('please fill the form correctly');\r\n            enqueueSnackbar(\"Please Fill Details completely\", { variant: 'warning' });\r\n        }\r\n        else {\r\n            props.close();\r\n            Axios.post('http://localhost:4000/hospitaladd', {\r\n                Pid: props.Pid,\r\n                hospital_id: selectedHospital,\r\n                date: date,\r\n                for_problem: problem\r\n            })\r\n                .then(res => {\r\n                    if (res.data === 'ERROR') {\r\n                        // alert('problem in adding hospital info')\r\n                        enqueueSnackbar(\"You May already have gone to this hospital today\", { variant: 'error' });\r\n                    }\r\n                    else {\r\n                        // console.log(res);\r\n                        // alert('succesfully added hospital info')\r\n                        enqueueSnackbar(\"Added Succesflly\", { variant: 'success' });\r\n                        props.update(res.data);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    enqueueSnackbar(\"Error occured\", { variant: 'error' });\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal show={props.show} onHide={props.close} aria-labelledby=\"contained-modal-title-vcenter\" style={{ marginTop: \"40px\" }}>\r\n            <Modal.Header>\r\n                <Modal.Title>Add Your consulted Hospital Information</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Select Hospital</Form.Label>\r\n                        <Form.Control as=\"select\" name=\"hospital_id\" onChange={(e) => setSelectedHospital(e.target.value)}>\r\n                            {hospitals.map(hospital => {\r\n                                return (\r\n                                    <option value={hospital.HOSPITAL_ID}>{hospital.HOSPITAL_ID + \"  \" + hospital.NAME}</option>\r\n                                )\r\n                            })}\r\n                            <option selected value={''}>Select</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Date</Form.Label>\r\n                        <Form.Control name=\"date\" type=\"date\" value={date} onChange={(e) => setDate(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Problem</Form.Label>\r\n                        <Form.Control name=\"for_problem\" type=\"text\" value={problem} onChange={(e) => setProblem(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                </Form>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button color=\"secondary\" onClick={handleClose}>cancel</Button>\r\n                <Button color=\"primary\" onClick={handleSubmit}>Submit</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default HospitalAddForm;"]},"metadata":{},"sourceType":"module"}