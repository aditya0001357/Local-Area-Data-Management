{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\singh\\\\Downloads\\\\Local-Area-Website-DBMS--main\\\\Local-Area-Website-DBMS--main\\\\client\\\\src\\\\components\\\\modal\\\\SchoolInfoAdd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from '@material-ui/core/Button';\nimport Axios from 'axios';\nimport { useSnackbar } from 'notistack';\n\nfunction SchoolInfoAdd(props) {\n  _s();\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [schools, setSchools] = useState([]);\n  const [selectedSchoolId, setSchoolId] = useState('');\n  const [from_std, setFrom_std] = useState('');\n  const [to_std, setTo_std] = useState('');\n  const [from_year, setFrom_year] = useState('');\n  const [to_year, setTo_year] = useState('');\n\n  const handleClose = () => {\n    props.close();\n  };\n\n  useEffect(() => {\n    Axios.get('http://localhost:4000/schools').then(res => {\n      setSchools(res.data);\n    }).catch(err => {\n      enqueueSnackbar(\"Error occured\", {\n        variant: 'error'\n      });\n    });\n  }, []);\n\n  const handleSubmit = () => {\n    if (selectedSchoolId === '' || from_std === '' || to_std === '' || from_year === '' || to_year === '') {\n      // alert('please fill the complete details');\n      enqueueSnackbar(\"Please fill details completely\", {\n        variant: 'warning'\n      });\n    } else if (parseInt(from_std) >= parseInt(to_std)) {\n      enqueueSnackbar(\"Please fill std details correctly\", {\n        variant: 'warning'\n      });\n    } else if (parseInt(from_year) >= parseInt(to_year)) {\n      enqueueSnackbar(\"Please fill year details correctly\", {\n        variant: 'warning'\n      });\n    } else {\n      props.close();\n      Axios.post('http://localhost:4000/schooladd', {\n        Pid: props.Pid,\n        school_id: selectedSchoolId,\n        from_std: parseInt(from_std),\n        to_std: parseInt(to_std),\n        from_year: parseInt(from_year),\n        to_year: parseInt(to_year)\n      }).then(res => {\n        if (res.data === 'ERROR') {\n          // alert('Adding of School Unsuccesfull');\n          enqueueSnackbar(\"Duplicate Information not Allowed\", {\n            variant: 'error'\n          });\n        } else {\n          // console.log(res);\n          // alert('school added succesfully');\n          props.update(res.data);\n          enqueueSnackbar(\"Added Succesflly\", {\n            variant: 'success'\n          });\n        }\n      }).catch(err => {\n        enqueueSnackbar(\"Error occured\", {\n          variant: 'error'\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.show,\n    onHide: handleClose,\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    style: {\n      marginTop: \"40px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Add your school details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Select your School\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"school\",\n            as: \"select\",\n            onChange: e => setSchoolId(e.target.value),\n            children: [schools.map(school => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: school.SCHOOL_ID,\n                children: school.SCHOOL_ID + \"  \" + school.NAME\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              value: '',\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Mention your std\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"from_std\",\n            placeholder: \"From\",\n            value: from_std,\n            type: \"text\",\n            onChange: e => setFrom_std(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"to_std\",\n            placeholder: \"To\",\n            value: to_std,\n            type: \"text\",\n            onChange: e => setTo_std(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Mention the year of study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"from_year\",\n            placeholder: \"From\",\n            value: from_year,\n            type: \"text\",\n            onChange: e => setFrom_year(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"to_year\",\n            placeholder: \"To\",\n            value: to_year,\n            type: \"text\",\n            onChange: e => setTo_year(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: handleClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SchoolInfoAdd, \"vxLc53exbUoGT5hxqzdvLDHFoVU=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = SchoolInfoAdd;\nexport default SchoolInfoAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"SchoolInfoAdd\");","map":{"version":3,"sources":["C:/Users/singh/Downloads/Local-Area-Website-DBMS--main/Local-Area-Website-DBMS--main/client/src/components/modal/SchoolInfoAdd.js"],"names":["React","useEffect","useState","Form","Modal","Button","Axios","useSnackbar","SchoolInfoAdd","props","enqueueSnackbar","schools","setSchools","selectedSchoolId","setSchoolId","from_std","setFrom_std","to_std","setTo_std","from_year","setFrom_year","to_year","setTo_year","handleClose","close","get","then","res","data","catch","err","variant","handleSubmit","parseInt","post","Pid","school_id","update","show","marginTop","e","target","value","map","school","SCHOOL_ID","NAME"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from '@material-ui/core/Button'\r\nimport Axios from 'axios';\r\nimport { useSnackbar } from 'notistack';\r\n\r\n\r\nfunction SchoolInfoAdd(props) {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const [schools, setSchools] = useState([]);\r\n    const [selectedSchoolId, setSchoolId] = useState('');\r\n    const [from_std, setFrom_std] = useState('');\r\n    const [to_std, setTo_std] = useState('');\r\n    const [from_year, setFrom_year] = useState('');\r\n    const [to_year, setTo_year] = useState('');\r\n\r\n    const handleClose = () => {\r\n        props.close();\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:4000/schools')\r\n            .then(res => {\r\n                setSchools(res.data);\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Error occured\", { variant: 'error' });\r\n            })\r\n    }, [])\r\n\r\n    const handleSubmit = () => {\r\n\r\n        if (selectedSchoolId === '' || from_std === '' || to_std === '' || from_year === '' || to_year === '') {\r\n            // alert('please fill the complete details');\r\n            enqueueSnackbar(\"Please fill details completely\", { variant: 'warning' });\r\n        }\r\n        else if(parseInt(from_std)>=parseInt(to_std)){\r\n            enqueueSnackbar(\"Please fill std details correctly\", { variant: 'warning' });\r\n        }\r\n        else if(parseInt(from_year)>=parseInt(to_year)){\r\n            enqueueSnackbar(\"Please fill year details correctly\", { variant: 'warning' });\r\n        }\r\n        else {\r\n            props.close();\r\n            Axios.post('http://localhost:4000/schooladd', {\r\n                Pid: props.Pid,\r\n                school_id: selectedSchoolId,\r\n                from_std: parseInt(from_std),\r\n                to_std: parseInt(to_std),\r\n                from_year: parseInt(from_year),\r\n                to_year: parseInt(to_year)\r\n            })\r\n                .then(res => {\r\n                    if (res.data === 'ERROR') {\r\n                        // alert('Adding of School Unsuccesfull');\r\n                        enqueueSnackbar(\"Duplicate Information not Allowed\", { variant: 'error' });\r\n                    }\r\n                    else {\r\n                        // console.log(res);\r\n                        // alert('school added succesfully');\r\n                        props.update(res.data);\r\n                        enqueueSnackbar(\"Added Succesflly\", { variant: 'success' });\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    enqueueSnackbar(\"Error occured\", { variant: 'error' });\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal show={props.show} onHide={handleClose} aria-labelledby=\"contained-modal-title-vcenter\" style={{ marginTop: \"40px\" }}>\r\n            <Modal.Header>\r\n                <Modal.Title>Add your school details</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Select your School</Form.Label>\r\n                        <Form.Control name=\"school\" as='select' onChange={(e) => setSchoolId(e.target.value)}>\r\n                            {schools.map(school => {\r\n                                return (\r\n                                    <option value={school.SCHOOL_ID}>{school.SCHOOL_ID + \"  \" + school.NAME}</option>\r\n                                )\r\n                            })}\r\n                            <option selected value={''}>Select</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Mention your std</Form.Label>\r\n                        <Form.Control name=\"from_std\" placeholder=\"From\" value={from_std} type=\"text\" onChange={(e) => setFrom_std(e.target.value)} />\r\n                        <Form.Control name=\"to_std\" placeholder=\"To\" value={to_std} type=\"text\" onChange={(e) => setTo_std(e.target.value)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Mention the year of study</Form.Label>\r\n                        <Form.Control name=\"from_year\" placeholder=\"From\" value={from_year} type=\"text\" onChange={(e) => setFrom_year(e.target.value)} />\r\n                        <Form.Control name=\"to_year\" placeholder=\"To\" value={to_year} type=\"text\" onChange={(e) => setTo_year(e.target.value)} />\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button color=\"secondary\" onClick={handleClose}>Cancel</Button>\r\n                <Button color=\"primary\" onClick={handleSubmit}>Submit</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default SchoolInfoAdd;"]},"metadata":{},"sourceType":"module"}